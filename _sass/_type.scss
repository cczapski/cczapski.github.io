$body-text: 'alverata-pe', Arial, sans-serif;

@mixin font($em){
	font-size: ($em*16) + px;
	font-size: ($em) + em;
}

body {
	font-family: $body-text;
	@include font(1);
	line-height: 1.5;
	color: $color1;
	font-weight: 300;
}

h1, h2, h3, h4, h5, h6 {
	line-height: 1.5;
	color: $color1;
	font-family: 'ff-enzo-web', sans-serif;
}

h1 {
	@include font(2.5);
	font-family: 'alverata-pe', sans-serif;
}

h2 {
	@include font(1.8);
	font-family: 'ff-enzo-web', sans-serif;

}

h3 {
	@include font(1.5);
	font-family: 'ff-enzo-web', sans-serif;
	padding-top: 10px;
	padding-left: 10px;
}

h4 {
	@include font(1.8);
}

h5 {
	@include font(1.3);
	font-style: italic;
}

p {
	padding: 0 30px 30px 0;
}

a {
	text-decoration: none;
	border-bottom: 2px solid $color2;
	color: $color1;

	&:hover {
		color: $color2;
		cursor: pointer;
	}
}

ol {
	list-style: decimal inside;

	li {
		padding-bottom: 10px;
		padding-left: 60px;

		&:last-child {
			padding-bottom: 30px;
		}
	}
}

.menu {
	color: $color1;
}

.dark-blue {
	color: $color1;
}

.bold {
	font-weight: bold;
}

.italic {
	font-style: italic;
}

.margin-left {
	margin-left: 60px;
}

.small-note {
	@include font(.9);
}

//Border mixins 
@mixin borderFull($color) {
	border: 2px solid $color;
}

@mixin borderLeft($color) {
	border-left: 2px solid $color;
	padding-left: 10px
}

@mixin borderRight($color) {
	border-right: 2px solid $color;
	padding-right:10px;
}

@mixin borderBottom($color) {
	border-bottom: 2px solid $color;
	padding-bottom: 15px;
}

//Box Shadow Mixin
@mixin boxShadow() {
	-webkit-box-shadow: 0px 0px 15px 0px rgba(211,211,211,1);
	   -moz-box-shadow: 0px 0px 15px 0px rgba(211,211,211,1);
		    box-shadow: 0px 0px 15px 0px rgba(211,211,211,1);
}

//Button Mixin
@mixin outline-out {
	$outerBorderWidth: 4px;
	$innerBorderWidth: 4px;

	@include hacks();
	position: relative;

	&:before {
		content: '';
		position: absolute;
		border: $color2 solid $outerBorderWidth;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		@include prefixed(transition-duration, .3s);
		@include prefixed(transition-property, "top, right, bottom, left");
	}

	&:hover:before,
	&:focus:before,
	&:active:before {
		top: -($outerBorderWidth + $innerBorderWidth);
		right: -($outerBorderWidth + $innerBorderWidth);
		bottom: -($outerBorderWidth + $innerBorderWidth);
		left: -($outerBorderWidth + $innerBorderWidth);
	}
}